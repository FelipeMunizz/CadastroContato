@model LoginModel

@{
    Layout = "_LayoutOff";
    ViewData["Title"] = "Login";
}
@if (TempData["MensagemErro"] != null)
    {
        <div class="alert alert-danger alert1" role="alert">
            <button type="button" class="btn btn-danger btn-sm close-alert" aria-label="Close">x</button>
            @TempData["MensagemErro"]
        </div>
    }
@if (TempData["MensagemSucesso"] != null)
    {
        <div class="alert alert-success alert1" role="alert">
             <button type="button" class="btn btn-danger btn-sm close-alert" aria-label="Close">x</button>
                @TempData["MensagemSucesso"]
        </div>
    }
<div class="container d-flex justify-content-center">
<form asp-controller="Login" asp-action="Entrar" method="post">
  <div class="mb-3">
    <label for="login" class="form-label">Login</label>
    <input type="text" class="form-control" id="login" asp-for="Login">    
    @Html.ValidationMessageFor(x => x.Login)
  </div>
  <div class="mb-3">
    <label for="senha" class="form-label">Senha</label>
    <input type="password" class="form-control" id="senha" asp-for="Senha">
    @Html.ValidationMessageFor(x => x.Senha)
  </div>
  <button type="submit" class="btn btn-primary">Entrar</button>
  <p class="mb-4 text-sm-center mt-auto">
      Esqueceu sua Senha?
      <a asp-action="RedefinirSenha" asp-controller="Login">Redefinir Minha Senha</a>
  </p>
</form>
</div>